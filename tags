!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ButtonProp	src/Components/Button.elm	/^type ButtonProp msg$/;"	t
Model	src/Stories/Button.elm	/^type alias Model =$/;"	a
Model	src/Stories/Checkbox.elm	/^type alias Model =$/;"	a
Msg	src/Stories/Button.elm	/^type Msg$/;"	t
Msg	src/Stories/Checkbox.elm	/^type Msg$/;"	t
active	src/Components/Button.elm	/^active : ButtonProp msg$/;"	c
appendIf	src/Utils.elm	/^appendIf : Bool -> a -> List a -> List a$/;"	f
button	src/Components/Button.elm	/^button : List (ButtonProp msg) -> List (Html msg) -> Html msg$/;"	f
buttonProp	src/Components/Button.elm	/^buttonProp : String -> ButtonProp msg$/;"	f
buttonStates	src/Stories/Button.elm	/^buttonStates : List (B.ButtonProp Msg) -> Model -> Html Msg$/;"	f
catMaybes	src/Utils.elm	/^catMaybes : List (Maybe a) -> List a$/;"	f
checkValidServiceWorker	src/registerServiceWorker.js	/^function checkValidServiceWorker(swUrl) {$/;"	f
concatIf	src/Utils.elm	/^concatIf : Bool -> List a -> List a -> List a$/;"	f
disabled	src/Components/Button.elm	/^disabled : ButtonProp msg$/;"	c
exampleButton	src/Stories/Button.elm	/^exampleButton : List (B.ButtonProp Msg) -> String -> Html Msg$/;"	f
focus	src/Components/Button.elm	/^focus : ButtonProp msg$/;"	c
hover	src/Components/Button.elm	/^hover : ButtonProp msg$/;"	c
init	src/Stories/Button.elm	/^init : Model$/;"	c
init	src/Stories/Checkbox.elm	/^init : Model$/;"	c
loading	src/Components/Button.elm	/^loading : ButtonProp msg$/;"	c
loremIpsum	src/Utils.elm	/^loremIpsum : String$/;"	c
maybeAppend	src/Utils.elm	/^maybeAppend : Maybe a -> List a -> List a$/;"	f
onClick	src/Components/Button.elm	/^onClick : msg -> ButtonProp msg$/;"	f
primary	src/Components/Button.elm	/^primary : ButtonProp msg$/;"	c
primaryButton	src/Stories/Button.elm	/^primaryButton : Model -> Html Msg$/;"	f
registerValidSW	src/registerServiceWorker.js	/^function registerValidSW(swUrl) {$/;"	f
secondary	src/Components/Button.elm	/^secondary : ButtonProp msg$/;"	c
secondaryButton	src/Stories/Button.elm	/^secondaryButton : Model -> Html Msg$/;"	f
small	src/Components/Button.elm	/^small : ButtonProp msg$/;"	c
smallButtons	src/Stories/Button.elm	/^smallButtons : Model -> Html Msg$/;"	f
square	src/Components/Button.elm	/^square : ButtonProp msg$/;"	c
update	src/Stories/Button.elm	/^update : Msg -> Model -> ( Model, Cmd Msg )$/;"	f
update	src/Stories/Checkbox.elm	/^update : Msg -> Model -> ( Model, Cmd Msg )$/;"	f
view	src/Stories/Button.elm	/^view : Model -> Html Msg$/;"	f
view	src/Stories/Checkbox.elm	/^view : Model -> Html Msg$/;"	f
wrapClass	src/Utils.elm	/^wrapClass : (Attribute msg -> p) -> String -> p$/;"	f
